#docker-compose.yml
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bizmap_postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-bizmap_db}
      POSTGRES_USER: ${DATABASE_USER:-bizmap_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-bizmap_password}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - bizmap_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-bizmap_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: bizmap_redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-bizmap_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bizmap_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: bizmap_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - bizmap_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Django Application
  web:
    build: .
    container_name: bizmap_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py setup_payment_methods &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 config.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgres://${DATABASE_USER:-bizmap_user}:${DATABASE_PASSWORD:-bizmap_password}@postgres:5432/${DATABASE_NAME:-bizmap_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-bizmap_redis_password}@redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-bizmap_redis_password}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-bizmap_redis_password}@redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - bizmap_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery_worker:
    build: .
    container_name: bizmap_celery_worker
    command: celery -A config worker -l info --concurrency=2
    volumes:
      - .:/app
      - logs_volume:/app/logs
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgres://${DATABASE_USER:-bizmap_user}:${DATABASE_PASSWORD:-bizmap_password}@postgres:5432/${DATABASE_NAME:-bizmap_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-bizmap_redis_password}@redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-bizmap_redis_password}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-bizmap_redis_password}@redis:6379/0
    depends_on:
      - postgres
      - redis
      - web
    networks:
      - bizmap_network

  # Celery Beat (Scheduler)
  celery_beat:
    build: .
    container_name: bizmap_celery_beat
    command: celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
      - logs_volume:/app/logs
    environment:
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgres://${DATABASE_USER:-bizmap_user}:${DATABASE_PASSWORD:-bizmap_password}@postgres:5432/${DATABASE_NAME:-bizmap_db}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-bizmap_redis_password}@redis:6379/0
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-bizmap_redis_password}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-bizmap_redis_password}@redis:6379/0
    depends_on:
      - postgres
      - redis
      - web
    networks:
      - bizmap_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bizmap_nginx
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - bizmap_network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:
  static_volume:
  media_volume:
  logs_volume:

networks:
  bizmap_network:
    driver: bridge