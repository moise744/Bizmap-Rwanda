# Generated by Django 5.2.6 on 2025-09-22 12:19

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("businesses", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MobileMoneyProvider",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "provider_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("api_config", models.JSONField(default=dict)),
            ],
            options={
                "verbose_name": "Mobile Money Provider",
                "verbose_name_plural": "Mobile Money Providers",
                "db_table": "mobile_money_providers",
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "method_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=50, unique=True)),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("mobile_money", "Mobile Money"),
                            ("bank_transfer", "Bank Transfer"),
                            ("credit_card", "Credit Card"),
                            ("cash", "Cash"),
                        ],
                        max_length=20,
                    ),
                ),
                ("provider", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("requires_external_integration", models.BooleanField(default=False)),
                (
                    "min_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "max_amount",
                    models.DecimalField(
                        decimal_places=2, default=1000000, max_digits=10
                    ),
                ),
                ("supported_currencies", models.JSONField(default=list)),
                (
                    "fixed_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "percentage_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("description", models.TextField(blank=True)),
                ("icon_url", models.URLField(blank=True)),
                ("api_config", models.JSONField(default=dict)),
                (
                    "mobile_money_provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_methods",
                        to="payments.mobilemoneyprovider",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment Method",
                "verbose_name_plural": "Payment Methods",
                "db_table": "payment_methods",
            },
        ),
        migrations.CreateModel(
            name="PaymentTransaction",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "transaction_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="RWF", max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("successful", "Successful"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("general", "General Payment"),
                            ("business_listing", "Business Listing"),
                            ("premium_features", "Premium Features"),
                            ("advertisement", "Advertisement"),
                            ("service_booking", "Service Booking"),
                        ],
                        default="general",
                        max_length=30,
                    ),
                ),
                ("external_reference", models.CharField(blank=True, max_length=100)),
                (
                    "provider_transaction_id",
                    models.CharField(blank=True, max_length=100),
                ),
                ("related_object_id", models.CharField(blank=True, max_length=100)),
                ("payer_phone_number", models.CharField(blank=True, max_length=20)),
                ("payer_email", models.EmailField(blank=True, max_length=254)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("account_number", models.CharField(blank=True, max_length=50)),
                ("description", models.TextField(blank=True)),
                (
                    "processing_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("initiated_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("failure_reason", models.TextField(blank=True)),
                ("failure_code", models.CharField(blank=True, max_length=50)),
                ("provider_response", models.JSONField(default=dict)),
                ("metadata", models.JSONField(default=dict)),
                ("callback_data", models.JSONField(default=dict)),
                (
                    "business",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_transactions",
                        to="businesses.business",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="payments.paymentmethod",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment Transaction",
                "verbose_name_plural": "Payment Transactions",
                "db_table": "payment_transactions",
            },
        ),
        migrations.CreateModel(
            name="PaymentRefund",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "refund_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("reason", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("external_reference", models.CharField(blank=True, max_length=100)),
                ("provider_refund_id", models.CharField(blank=True, max_length=100)),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("failure_reason", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "transaction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refunds",
                        to="payments.paymenttransaction",
                    ),
                ),
            ],
            options={
                "verbose_name": "Payment Refund",
                "verbose_name_plural": "Payment Refunds",
                "db_table": "payment_refunds",
            },
        ),
        migrations.AddIndex(
            model_name="paymenttransaction",
            index=models.Index(
                fields=["user", "status"], name="payment_tra_user_id_131e27_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymenttransaction",
            index=models.Index(
                fields=["external_reference"], name="payment_tra_externa_28eafd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymenttransaction",
            index=models.Index(
                fields=["created_at"], name="payment_tra_created_e43546_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymenttransaction",
            index=models.Index(
                fields=["provider_transaction_id"],
                name="payment_tra_provide_10d447_idx",
            ),
        ),
    ]
