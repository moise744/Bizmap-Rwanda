# Generated by Django 5.2.6 on 2025-09-22 12:16

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="IntentClassification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("intent_name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField()),
                ("category", models.CharField(max_length=50)),
                ("example_phrases", models.JSONField(default=list)),
                ("keywords", models.JSONField(default=list)),
                ("related_business_categories", models.JSONField(default=list)),
                ("kinyarwanda_phrases", models.JSONField(default=list)),
                ("french_phrases", models.JSONField(default=list)),
                ("accuracy_score", models.FloatField(default=0.0)),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "ai_intent_classifications",
            },
        ),
        migrations.CreateModel(
            name="ConversationSession",
            fields=[
                (
                    "session_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("current_intent", models.CharField(blank=True, max_length=100)),
                (
                    "conversation_state",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("waiting", "Waiting for Response"),
                            ("completed", "Completed"),
                            ("timeout", "Timeout"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("user_language", models.CharField(default="en", max_length=10)),
                (
                    "user_latitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=10, null=True
                    ),
                ),
                (
                    "user_longitude",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=11, null=True
                    ),
                ),
                ("location_context", models.JSONField(default=dict)),
                ("conversation_memory", models.JSONField(default=dict)),
                ("session_context", models.JSONField(default=list)),
                ("total_messages", models.PositiveIntegerField(default=0)),
                ("satisfaction_score", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_conversations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "ai_conversation_sessions",
            },
        ),
        migrations.CreateModel(
            name="ConversationMessage",
            fields=[
                (
                    "message_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("user", "User Message"),
                            ("ai", "AI Response"),
                            ("system", "System Message"),
                        ],
                        max_length=10,
                    ),
                ),
                ("content", models.TextField()),
                ("original_language", models.CharField(default="en", max_length=10)),
                ("translated_content", models.JSONField(default=dict)),
                (
                    "processing_state",
                    models.CharField(
                        choices=[
                            ("received", "Received"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="received",
                        max_length=20,
                    ),
                ),
                ("intent_detected", models.CharField(blank=True, max_length=100)),
                ("entities_extracted", models.JSONField(default=list)),
                ("confidence_score", models.FloatField(default=0.0)),
                ("response_time_ms", models.PositiveIntegerField(null=True)),
                ("ai_model_used", models.CharField(blank=True, max_length=100)),
                ("user_satisfaction", models.IntegerField(blank=True, null=True)),
                ("user_feedback", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "conversation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="ai_engine.conversationsession",
                    ),
                ),
            ],
            options={
                "db_table": "ai_conversation_messages",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserPreferenceProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("preferred_business_types", models.JSONField(default=list)),
                ("preferred_locations", models.JSONField(default=list)),
                ("preferred_price_ranges", models.JSONField(default=list)),
                ("dietary_restrictions", models.JSONField(default=list)),
                ("transportation_preferences", models.JSONField(default=list)),
                ("typical_search_times", models.JSONField(default=list)),
                (
                    "conversation_style",
                    models.CharField(default="friendly", max_length=50),
                ),
                (
                    "response_preference",
                    models.CharField(default="detailed", max_length=20),
                ),
                ("frequently_used_phrases", models.JSONField(default=dict)),
                ("language_mixing_pattern", models.JSONField(default=dict)),
                ("successful_recommendations", models.JSONField(default=list)),
                ("rejected_suggestions", models.JSONField(default=list)),
                ("preference_confidence", models.FloatField(default=0.0)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_ai_preferences",
            },
        ),
        migrations.AddIndex(
            model_name="conversationsession",
            index=models.Index(
                fields=["user", "conversation_state"],
                name="ai_conversa_user_id_29d0de_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="conversationsession",
            index=models.Index(
                fields=["created_at"], name="ai_conversa_created_d021eb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationsession",
            index=models.Index(
                fields=["last_activity"], name="ai_conversa_last_ac_7e6d0d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationmessage",
            index=models.Index(
                fields=["conversation", "created_at"],
                name="ai_conversa_convers_40953b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="conversationmessage",
            index=models.Index(
                fields=["message_type"], name="ai_conversa_message_4bd1e8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversationmessage",
            index=models.Index(
                fields=["intent_detected"], name="ai_conversa_intent__132d38_idx"
            ),
        ),
    ]
