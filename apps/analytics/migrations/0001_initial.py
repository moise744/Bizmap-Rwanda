# Generated by Django 5.2.6 on 2025-09-22 12:17

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("businesses", "__first__"),
    ]

    operations = [
        migrations.CreateModel(
            name="MarketIntelligence",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "intelligence_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("category_name", models.CharField(max_length=100)),
                ("location", models.CharField(max_length=100)),
                ("total_businesses", models.PositiveIntegerField(default=0)),
                ("category_growth_rate", models.FloatField(default=0.0)),
                (
                    "market_saturation",
                    models.CharField(default="medium", max_length=20),
                ),
                ("competition_level", models.FloatField(default=0.0)),
                ("peak_search_times", models.JSONField(default=list)),
                ("popular_search_terms", models.JSONField(default=list)),
                ("seasonal_trends", models.JSONField(default=dict)),
                (
                    "average_price_range",
                    models.CharField(default="medium", max_length=20),
                ),
                ("price_sensitivity", models.FloatField(default=0.0)),
                ("recommended_pricing", models.JSONField(default=dict)),
                ("underserved_areas", models.JSONField(default=list)),
                ("emerging_trends", models.JSONField(default=list)),
                ("recommended_improvements", models.JSONField(default=list)),
                ("data_period_start", models.DateTimeField()),
                ("data_period_end", models.DateTimeField()),
            ],
            options={
                "db_table": "market_intelligence",
                "indexes": [
                    models.Index(
                        fields=["category_name", "location"],
                        name="market_inte_categor_37fbd6_idx",
                    ),
                    models.Index(
                        fields=["data_period_end"],
                        name="market_inte_data_pe_5f1be4_idx",
                    ),
                ],
                "unique_together": {("category_name", "location")},
            },
        ),
        migrations.CreateModel(
            name="SearchAnalytics",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "analytics_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("search_term", models.CharField(max_length=200)),
                ("search_category", models.CharField(blank=True, max_length=100)),
                ("location", models.CharField(blank=True, max_length=100)),
                ("search_count", models.PositiveIntegerField(default=0)),
                ("result_count", models.PositiveIntegerField(default=0)),
                ("click_through_rate", models.FloatField(default=0.0)),
                ("date", models.DateField()),
                ("hour", models.PositiveIntegerField(blank=True, null=True)),
                ("trend_score", models.FloatField(default=0.0)),
                ("is_trending", models.BooleanField(default=False)),
            ],
            options={
                "db_table": "search_analytics",
                "indexes": [
                    models.Index(
                        fields=["search_term", "date"],
                        name="search_anal_search__8a2a9a_idx",
                    ),
                    models.Index(
                        fields=["date", "is_trending"],
                        name="search_anal_date_32126a_idx",
                    ),
                    models.Index(
                        fields=["trend_score"], name="search_anal_trend_s_5f1a4e_idx"
                    ),
                ],
                "unique_together": {("search_term", "date", "hour")},
            },
        ),
        migrations.CreateModel(
            name="UserBehaviorAnalytics",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "analytics_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("user_segment", models.CharField(max_length=50)),
                ("location", models.CharField(max_length=100)),
                ("session_duration_minutes", models.FloatField(default=0.0)),
                ("pages_viewed", models.PositiveIntegerField(default=0)),
                ("searches_performed", models.PositiveIntegerField(default=0)),
                ("businesses_contacted", models.PositiveIntegerField(default=0)),
                ("date", models.DateField()),
                ("engagement_score", models.FloatField(default=0.0)),
                ("conversion_score", models.FloatField(default=0.0)),
            ],
            options={
                "db_table": "user_behavior_analytics",
                "indexes": [
                    models.Index(
                        fields=["user_segment", "date"],
                        name="user_behavi_user_se_9d9219_idx",
                    ),
                    models.Index(
                        fields=["engagement_score"],
                        name="user_behavi_engagem_2244de_idx",
                    ),
                ],
                "unique_together": {("user_segment", "location", "date")},
            },
        ),
        migrations.CreateModel(
            name="BusinessPerformanceMetric",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "metric_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                ("metric_type", models.CharField(max_length=50)),
                ("value", models.FloatField()),
                ("previous_value", models.FloatField(blank=True, null=True)),
                ("change_percentage", models.FloatField(blank=True, null=True)),
                ("source", models.CharField(default="system", max_length=50)),
                ("notes", models.TextField(blank=True)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_metrics",
                        to="businesses.business",
                    ),
                ),
            ],
            options={
                "db_table": "business_performance_metrics",
                "indexes": [
                    models.Index(
                        fields=["business", "date"],
                        name="business_pe_busines_b9269f_idx",
                    ),
                    models.Index(
                        fields=["metric_type", "date"],
                        name="business_pe_metric__387c8e_idx",
                    ),
                ],
                "unique_together": {("business", "date", "metric_type")},
            },
        ),
        migrations.CreateModel(
            name="CompetitiveAnalysis",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "analysis_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("competitors", models.JSONField(default=list)),
                ("market_rank", models.PositiveIntegerField(blank=True, null=True)),
                ("unique_advantages", models.JSONField(default=list)),
                ("areas_for_improvement", models.JSONField(default=list)),
                ("differentiation_score", models.FloatField(default=0.0)),
                ("strategic_recommendations", models.JSONField(default=list)),
                ("radius_km", models.FloatField(default=5.0)),
                ("category_focus", models.CharField(max_length=100)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competitive_analysis",
                        to="businesses.business",
                    ),
                ),
            ],
            options={
                "db_table": "competitive_analysis",
                "indexes": [
                    models.Index(
                        fields=["business", "created_at"],
                        name="competitive_busines_c35de2_idx",
                    ),
                    models.Index(
                        fields=["category_focus"], name="competitive_categor_b3faed_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomerInsight",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "insight_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("customer_segments", models.JSONField(default=list)),
                ("overall_satisfaction", models.FloatField(default=0.0)),
                ("service_satisfaction", models.FloatField(default=0.0)),
                ("value_satisfaction", models.FloatField(default=0.0)),
                ("improvement_areas", models.JSONField(default=list)),
                ("growth_potential", models.FloatField(default=0.0)),
                ("churn_risk", models.FloatField(default=0.0)),
                ("revenue_forecast", models.JSONField(default=dict)),
                ("analysis_period_days", models.PositiveIntegerField(default=30)),
                ("confidence_score", models.FloatField(default=0.0)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="customer_insights",
                        to="businesses.business",
                    ),
                ),
            ],
            options={
                "db_table": "customer_insights",
                "indexes": [
                    models.Index(
                        fields=["business", "created_at"],
                        name="customer_in_busines_728038_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="RevenueOptimization",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "optimization_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("current_metrics", models.JSONField(default=dict)),
                ("optimization_strategies", models.JSONField(default=list)),
                ("predicted_outcomes", models.JSONField(default=dict)),
                (
                    "implementation_timeline",
                    models.CharField(blank=True, max_length=100),
                ),
                ("priority_level", models.CharField(default="medium", max_length=20)),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revenue_optimizations",
                        to="businesses.business",
                    ),
                ),
            ],
            options={
                "db_table": "revenue_optimizations",
                "indexes": [
                    models.Index(
                        fields=["business", "created_at"],
                        name="revenue_opt_busines_0d235c_idx",
                    ),
                    models.Index(
                        fields=["priority_level"], name="revenue_opt_priorit_5a7348_idx"
                    ),
                ],
            },
        ),
    ]
